cls
 # Get-Date -Format 'yyyyMMddHHmmss' >C:\backups\TIMETXT.txt

        $return=@()
        
        $servercon = New-Object System.Data.SqlClient.SqlConnection
        $servercon.ConnectionString = "Data Source=P-DBAU1-V;Initial Catalog=master;Integrated Security=true;"
        $servercmd = New-Object System.Data.SqlClient.SqlCommand
        $servercmd.Connection = $servercon
        #$servercmd.CommandText = "SELECT top 10 InstanceName FROM DBA.dbo.view_SQLServerInstances where Environment ='QA' AND State = 'Running'"
        $servercmd.CommandText = "SELECT distinct  vw.[InstanceName] FROM [DBA].[dbo].[view_SQLServerInstances] vw
                                  where vw.Started ='True'	
                                  AND vw.[StartMode] !='Disabled'
                                  AND vw.State ='Running'
                                  and vw.Environment='PROD'
                                  --AND vw.[InstanceName] ='P-DBUCAP3'
                                  and vw.ServerName not  in  (
                                                   SELECT   dc.[Decom_servers]
                                                  FROM [DBAutil].[dbo].[Decommission_server_List] dc)
                                                  Order by  vw.[InstanceName];
                               "
        $servercmd.CommandTimeout = 0
        
      # Write-Warning $servercmd.CommandText
        try
        {
            $servercon.Open()
       
                $read = $servercmd.ExecuteReader()
    
            while ($read.Read())
            {
                $dbserver = $read["InstanceName"]
                 
              Write-Host  $dbserver  # you can comment if you schedule this 

             
               $sqlcmd= "
                         USE [msdb]
                        GO

                        DECLARE @jobid sysname


                         declare usr_cursor CURSOR FOR
                          SELECT  [job_id]
                            -- ,SUSER_SNAME(owner_sid)
                          FROM [msdb].[dbo].[sysjobs]
                          WHERE  suser_sname(owner_sid) in ('SWBC\ABarry','SWBC\Fikre.Kassa','SWBC\Chad.Estes','SWBC\CWolf','SWBC\APamarthi')


                          OPEN usr_cursor   
                          FETCH NEXT FROM usr_cursor INTO @jobid

                         WHILE @@FETCH_STATUS = 0   
                         BEGIN   
 
                          EXEC msdb.dbo.sp_update_job @job_id=@jobid, 
		                        @owner_login_name=N'sa'
                        print @jobid
                          FETCH NEXT FROM usr_cursor INTO @jobid
                        END   
 
                        CLOSE usr_cursor   
                        DEALLOCATE usr_cursor
                
               "
               #$sqlcmd ="select @@servername as Servername,crdate as create_date, getdate() as checking_date from master.dbo.sysdatabases where name = 'tempdb'"
                #Invoke-Sqlcmd -ServerInstance $instance -Database tempdb -Query $sqlcmd -ErrorAction Stop -ConnectionTimeout 2



                  try{
                  ##$row = New-Object -TypeName Psobject -Property @{'InstanceName'=$dbserver; 'Startuptime' = $null;check_date=$null}
                  $check = Invoke-Sqlcmd -ServerInstance $dbserver -Database tempdb -Query $sqlcmd -ErrorAction Stop -ConnectionTimeout 0
                  

                  }
                  catch {
                  # do nothing
                      
                  
                       Write-Warning " server $dbserver  "
                        continue
                       
                   
                  }
                  finally {
                  $return+= $row 
                  }

            }  
        }
        catch {
                  # do nothing
                      
                  
                       Write-Warning " server $dbserver  "
                        continue
                       
                   
                  }
        